# -*- coding: utf-8 -*-
"""yoloV5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/github/sarahasan17/machine_learning/blob/main/yoloV5.ipynb

**Step 1 : Clone yolov5 repository**
"""

!git clone https://github.com/ultralytics/yolov5.git

"""**Step 2: Change Directory to yolov5**"""

# Commented out IPython magic to ensure Python compatibility.
# %cd yolov5/

"""**Step 3: Install Dependencies**"""

!pip install -U -r requirements.txt

"""**Step 4: Run Object Detection on Images. Provide image path. Upload image in the inference/images/ folder**"""

!python /content/yolov5/detect.py --source /content/ducks.jpg --weights yolov5s.pt --conf 0.4

"""**Step 5: Display image in colab**"""

# Commented out IPython magic to ensure Python compatibility.
import cv2
import matplotlib.pyplot as plt
# %matplotlib inline

image = cv2.imread("yolov5/runs/detect/exp/ducks.jpg")
height, width = image.shape[:2]
resized_image = cv2.resize(image,(3*width, 3*height), interpolation = cv2.INTER_CUBIC)

fig = plt.gcf()
fig.set_size_inches(18, 10)
plt.axis("off")
plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB))
plt.show()

"""**ON CROWDED STREET**"""

!python detect.py --source ./data/images/people.png --weights yolov5s.pt --conf 0.4

image = cv2.imread("runs/detect/exp4/people.png")
height, width = image.shape[:2]
resized_image = cv2.resize(image,(3*width, 3*height), interpolation = cv2.INTER_CUBIC)

fig = plt.gcf()
fig.set_size_inches(18, 10)
plt.axis("off")
plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB))
plt.show()

"""**Object Detection on Videos. Create a folder under inference/ called "videos", under which you can upload the video file and then provide the file path below**"""

!python /content/yolov5/detect.py --source /content/traffic2.jpg --weights yolov5s.pt --conf 0.4

image = cv2.imread("runs/detect/exp6/traffic2.jpg")
height, width = image.shape[:2]
resized_image = cv2.resize(image,(3*width, 3*height), interpolation = cv2.INTER_CUBIC)

fig = plt.gcf()
fig.set_size_inches(18, 10)
plt.axis("off")
plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB))
plt.show()